from pathlib import Path

from core.loader import load_module, unload_module, LOADED_MODULES
from core.api import MODULES_DIR
from core_modules.modules import fuzzy_find_module

async def load_command(api, message, args):
    await api.edit(message, "‚ùå –û—à–∏–±–∫–∞: —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ñ–∞–π–ª–∞–º–∏.\n\n–û—Ç–ø—Ä–∞–≤—å .py —Ñ–∞–π–ª –∏ –≤ –ø–æ–¥–ø–∏—Å–∏ –∫ –Ω–µ–º—É –Ω–∞–ø–∏—à–∏ .load")

async def unload_command(api, message, args):
    if not args: await api.edit(message, "‚ö†Ô∏è –£–∫–∞–∂–∏ –∏–º—è –º–æ–¥—É–ª—è."); return
    response = await unload_module(args[0])
    await api.edit(message, f"–í—ã–≤–æ–¥:\n{response}")

async def modules_command(api, message, args):
    if not LOADED_MODULES: await api.edit(message, "üì¶ –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π."); return
    response = "üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:\n\n"
    for name, data in LOADED_MODULES.items():
        ver = data['header'].get('version', 'N/A'); dev = data['header'].get('developer', 'N/A')
        response += f"‚Ä¢ {data['header'].get('name', name)} (v{ver}) –æ—Ç {dev}\n"
    await api.edit(message, response)

async def sendmodule_command(api, message, args):
    if not args: await api.edit(message, "‚ö†Ô∏è –£–∫–∞–∂–∏ –∏–º—è –º–æ–¥—É–ª—è."); return
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—á–µ—Ç–∫–∏–π –ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª—è
    module, error = fuzzy_find_module(args[0])
    if not module:
        await api.edit(message, f"‚ùå {error}")
        return
    
    module_path = module['file_path']
    display_name = module['display_name']
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º chat_id –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        chat_id = getattr(message, 'chat_id', None)
        if not chat_id:
            await api.edit(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å chat_id")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –º–æ–¥—É–ª—è
        await api.edit(message, f"‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª –º–æ–¥—É–ª—è {display_name}...")
        result = await api.send_file(chat_id, str(module_path), f"–ú–æ–¥—É–ª—å {display_name}", notify=False)
        
        if result:
            await api.delete(message, for_me=False)
        else:
            await api.edit(message, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –º–æ–¥—É–ª—è {display_name}")
            
    except Exception as e:
        await api.edit(message, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: {e}")

async def register(commands):
    commands["load"] = load_command
    commands["unload"] = unload_command
    commands["modules"] = modules_command
    commands["sendmodule"] = sendmodule_command