# –§–∞–π–ª: core_modules/restart.py
import asyncio
import json
import time
from pathlib import Path

from core.api import BOT_NAME, BOT_VERSION

RESTART_INFO_FILE = "restart_info.json"

async def restart_command(api, message, args):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —é–∑–µ—Ä–±–æ—Ç–∞."""
    await api.edit(message, "üîÑ **–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —é–∑–µ—Ä–±–æ—Ç–∞...**\n\n‚è≥ –°–æ—Ö—Ä–∞–Ω—è—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ...")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ
    restart_info = {
        "chat_id": message.chat_id,
        "message_id": message.id,
        "restart_time": time.time(),
        "restart_reason": " ".join(args) if args else "–†—É—á–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    }
    
    with open(RESTART_INFO_FILE, 'w', encoding='utf-8') as f:
        json.dump(restart_info, f, indent=2)
    
    # –ö—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ
    response = "üîÑ –Æ–∑–µ—Ä–±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...\n\n"
    response += f"‚è∞ –í—Ä–µ–º—è: {time.strftime('%H:%M:%S', time.localtime())}\n"
    response += f"üí¨ –ß–∞—Ç: {message.chat_id}\n"
    response += f"üìù –ü—Ä–∏—á–∏–Ω–∞: {restart_info['restart_reason']}\n\n"
    response += "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞..."
    
    await api.edit(message, response)
    
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
    await asyncio.sleep(1)
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    import os
    import sys
    os.execv(sys.executable, [sys.executable] + sys.argv)

async def check_restart_info(api):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    restart_file = Path(RESTART_INFO_FILE)
    if not restart_file.exists():
        return
    
    try:
        with open(restart_file, 'r', encoding='utf-8') as f:
            restart_info = json.load(f)
        
        chat_id = restart_info.get('chat_id')
        message_id = restart_info.get('message_id')
        restart_time = restart_info.get('restart_time', time.time())
        restart_reason = restart_info.get('restart_reason', '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫')
        
        if not chat_id or not message_id:
            return
        
        # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        current_time = time.time()
        restart_duration = current_time - restart_time
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        response = "‚úÖ –Æ–∑–µ—Ä–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!\n\n"
        response += f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {time.strftime('%H:%M:%S', time.localtime(restart_time))}\n"
        response += f"üïê –í—Ä–µ–º—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {restart_duration:.1f} —Å–µ–∫\n"
        response += f"üí¨ –ß–∞—Ç: {chat_id}\n"
        response += f"üìù –ü—Ä–∏—á–∏–Ω–∞: {restart_reason}\n\n"
        response += "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –º–æ–¥—É–ª–∏..."
        
        await api.client.edit_message(
            chat_id=chat_id,
            message_id=message_id,
            text=response
        )
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –≤ —á–∞—Ç–µ {chat_id}")
        
        # –ù–ï —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∑–¥–µ—Å—å - –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è update_restart_complete
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: {e}")

async def update_restart_complete(api):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π."""
    restart_file = Path(RESTART_INFO_FILE)
    if not restart_file.exists():
        return
    
    try:
        with open(restart_file, 'r', encoding='utf-8') as f:
            restart_info = json.load(f)
        
        chat_id = restart_info.get('chat_id')
        message_id = restart_info.get('message_id')
        restart_time = restart_info.get('restart_time', time.time())
        restart_reason = restart_info.get('restart_reason', '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫')
        
        if not chat_id or not message_id:
            return
        
        # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è
        current_time = time.time()
        total_duration = current_time - restart_time
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        response = "‚úÖ –Æ–∑–µ—Ä–±–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø—É—â–µ–Ω!\n\n"
        response += f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {time.strftime('%H:%M:%S', time.localtime(restart_time))}\n"
        response += f"üïê –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_duration:.1f} —Å–µ–∫\n"
        response += f"üí¨ –ß–∞—Ç: {chat_id}\n"
        response += f"üìù –ü—Ä–∏—á–∏–Ω–∞: {restart_reason}\n\n"
        response += f"ü§ñ {BOT_NAME} v{BOT_VERSION} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        
        await api.client.edit_message(
            chat_id=chat_id,
            message_id=message_id,
            text=response
        )
        
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ
        restart_file.unlink()
        
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –≤ —á–∞—Ç–µ {chat_id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def register(commands):
    commands["restart"] = restart_command
