import platform
import psutil

from core.loader import LOADED_MODULES, COMMANDS
from core.config import PREFIX

async def info_command(api, message, args):
    python_version = platform.python_version()
    try: cpu_display = f"{psutil.cpu_percent()}%"
    except: cpu_display = "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    try: ram_display = f"{psutil.virtual_memory().percent}%"
    except: ram_display = "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞
    owner_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    if api.me and api.me.names:
        owner_name = api.me.names[0].name
    
    info_text = (
        f"ü§ñ {api.BOT_NAME}\n\n"
        f"üî© –í–µ—Ä—Å–∏—è: {api.BOT_VERSION} (#{api.BOT_VERSION_CODE})\n"
        f"üë§ –í–ª–∞–¥–µ–ª–µ—Ü: {owner_name}\n\n"
        f"üñ• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö–æ—Å—Ç–µ:\n"
        f"    üêç Python: {python_version}\n"
        f"    üß† CPU: {cpu_display}\n"
        f"    üíæ RAM: {ram_display}\n\n"
        f"üìù –ü—Ä–µ—Ñ–∏–∫—Å: {PREFIX if PREFIX else '–ù–µ—Ç'}"
    )
    await api.edit(message, info_text)

async def help_command(api, message, args):
    if not args:
        response = "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n\n"
        response += "‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        response += f"{', '.join(COMMANDS.keys())}\n\n"
        if LOADED_MODULES:
            response += "üß© –ú–æ–¥—É–ª–∏:\n"
            for i, (name, data) in enumerate(LOADED_MODULES.items(), 1):
                response += f"{i}. {data['header'].get('name', name)}\n"
        response += f"\n–ò–Ω—Ñ–æ –æ –º–æ–¥—É–ª–µ: {PREFIX}help [–∏–º—è/–Ω–∞–∑–≤–∞–Ω–∏–µ/–Ω–æ–º–µ—Ä]"
    else:
        arg = ' '.join(args)
        found_module = None
        for i, (name, data) in enumerate(LOADED_MODULES.items(), 1):
            if arg == str(i) or arg.lower() == name.lower() or arg.lower() == data['header'].get('name', '').lower():
                found_module = data; break
        if not found_module:
            response = f"‚ùå –ú–æ–¥—É–ª—å '{arg}' –Ω–µ –Ω–∞–π–¥–µ–Ω."
        else:
            response = f"üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –º–æ–¥—É–ª—é \"{found_module['header'].get('name')}\"\n"
            ver = found_module['header'].get('version', 'N/A'); dev = found_module['header'].get('developer', 'N/A')
            response += f"–í–µ—Ä—Å–∏—è: {ver} | –ê–≤—Ç–æ—Ä: {dev}\n\n"
            for cmd, desc in found_module['commands'].items():
                response += f"‚ñ´Ô∏è {PREFIX}{cmd} - {desc}\n"
    await api.edit(message, response)

async def register(commands):
    commands["info"] = info_command
    commands["help"] = help_command
