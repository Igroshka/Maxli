# –ú–æ–¥—É–ª—å: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
# –í–µ—Ä—Å–∏—è: 1.0.0
# –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: Maxli Team
# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: requests, aiohttp, aiofiles

import aiohttp
import aiofiles
import os
import asyncio

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
AVAILABLE_MODELS = {
    "1": "flux",
    "2": "turbo", 
    "3": "nanobanana",
    "4": "seedream",
    "flux": "flux",
    "turbo": "turbo",
    "nanobanana": "nanobanana",
    "seedream": "seedream"
}

# –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é flux)
current_model = "flux"

async def genimg_command(api, message, args):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–º–ø—Ç—É."""
    if not args:
        await api.edit(message, "üé® –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .genimg [–ø—Ä–æ–º–ø—Ç]\n–ü—Ä–∏–º–µ—Ä: .genimg –∫—Ä–∞—Å–∏–≤–∞—è –ø—Ä–∏—Ä–æ–¥–∞\n\n–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: " + current_model)
        return
    
    prompt = " ".join(args)
    
    # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    chat_id = getattr(message, 'chat_id', None)
    if not chat_id:
        chat_id = await api.await_chat_id(message)
    
    if not chat_id:
        await api.edit(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å chat_id")
        return
    
    await api.edit(message, f"üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...\n–ü—Ä–æ–º–ø—Ç: {prompt}\n–ú–æ–¥–µ–ª—å: {current_model}")
    
    try:
        # URL –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_url = f"https://pollinations.ai/p/{prompt}?width=1024&height=1024&model={current_model}&nologo=true"
        
        print(f"üîç DEBUG: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL: {image_url}")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        timeout = aiohttp.ClientTimeout(total=60)  # 60 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
        async with aiohttp.ClientSession(timeout=timeout) as session:
            async with session.get(image_url) as response:
                if response.status == 200:
                    image_data = await response.read()
                    print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ, —Ä–∞–∑–º–µ—Ä: {len(image_data)} –±–∞–π—Ç")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ
                    temp_path = f"temp_gen_{message.id}.jpg"
                    async with aiofiles.open(temp_path, 'wb') as f:
                        await f.write(image_data)
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                    result = await api.send_photo(
                        chat_id=chat_id,
                        file_path=temp_path,
                        text=f"üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {prompt}\nü§ñ –ú–æ–¥–µ–ª—å: {current_model}"
                    )
                    
                    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    try:
                        os.remove(temp_path)
                        print(f"üßπ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {temp_path}")
                    except:
                        pass
                    
                    if result:
                        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—Å—Ç–∞
                        await api.delete(message)
                    else:
                        await api.edit(message, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
                else:
                    await api.edit(message, f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: HTTP {response.status}\n–í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except asyncio.TimeoutError:
        await api.edit(message, "‚è∞ –¢–∞–π–º–∞—É—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–º–ø—Ç")
    except Exception as e:
        await api.edit(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ genimg_command: {e}")

async def genimgmodel_command(api, message, args):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."""
    global current_model
    
    if not args:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
        models_text = "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:\n\n"
        for i, (key, model) in enumerate(AVAILABLE_MODELS.items(), 1):
            if key.isdigit():
                status = "‚úÖ" if model == current_model else "‚ö™"
                models_text += f"{status} {i}. {model}\n"
        
        models_text += f"\n–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: **{current_model}**\n"
        models_text += "\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .genimgmodel [–Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ]\n"
        models_text += "–ü—Ä–∏–º–µ—Ä—ã: .genimgmodel 1 –∏–ª–∏ .genimgmodel flux"
        
        await api.edit(message, models_text)
        return
    
    model_input = args[0].lower()
    
    if model_input in AVAILABLE_MODELS:
        old_model = current_model
        current_model = AVAILABLE_MODELS[model_input]
        await api.edit(message, f"‚úÖ –ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞: {old_model} ‚Üí **{current_model}**")
    else:
        await api.edit(message, f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å: {model_input}\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .genimgmodel –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞")

async def register(api):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –º–æ–¥—É–ª—è."""
    api.register_command("genimg", genimg_command)
    api.register_command("genimgmodel", genimgmodel_command)
