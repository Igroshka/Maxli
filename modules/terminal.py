# name: Terminal
# version: 1.0.0
# developer: rorolb
# dependencies: asyncio
# min-maxli: 26
# id: terminal

import asyncio

async def terminal_command(api, message, args):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    if not args:
        await api.edit(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: .terminal <–∫–æ–º–∞–Ω–¥–∞>")
        return
    
    command = " ".join(args)
    
    await api.edit(message, f"üñ•Ô∏è –í—ã–ø–æ–ª–Ω—è—é: `{command}`")
    
    try:
        process = await asyncio.create_subprocess_shell(
            command,
            stdout=asyncio.subprocess.PIPE,
            stderr=asyncio.subprocess.PIPE,
            shell=True
        )
        
        stdout, stderr = await process.communicate()
        
        result = ""
        if stdout:
            stdout_text = stdout.decode('utf-8', errors='ignore')
            result += f"‚úÖ –í—ã–≤–æ–¥:\n\n{stdout_text}\n"
        
        if stderr:
            stderr_text = stderr.decode('utf-8', errors='ignore')
            result += f"\n‚ùå –û—à–∏–±–∫–∏:\n\n{stderr_text}\n"
        
        if not result:
            result = "‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, –≤—ã–≤–æ–¥ –ø—É—Å—Ç"
        
        # –û–±—Ä–µ–∑–∞–µ–º —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –≤—ã–≤–æ–¥
        if len(result) > 4000:
            result = result[:4000] + "\n... (–≤—ã–≤–æ–¥ –æ–±—Ä–µ–∑–∞–Ω)"
        
        await api.edit(message, result)
        
    except Exception as e:
        await api.edit(message, f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {str(e)}")

async def register(api):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –º–æ–¥—É–ª—è."""
    api.register_command("terminal", terminal_command)