# –ú–æ–¥—É–ª—å: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
# –í–µ—Ä—Å–∏—è: 1.0.0
# –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: Maxli Team

import asyncio
from pathlib import Path

async def test_upload_command(api, message, args):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º chat_id
        chat_id = getattr(message, 'chat_id', None)
        if not chat_id:
            chat_id = await api.await_chat_id(message)
        
        if not chat_id:
            await api.edit(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å chat_id")
            return
        
        await api.edit(message, "üß™ –¢–µ—Å—Ç–∏—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–æ–≤...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        test_file_path = Path("test_upload.py")
        test_content = '''# –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
def test_function():
    return "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!"

print("–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω!")
'''
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        with open(test_file_path, 'w', encoding='utf-8') as f:
            f.write(test_content)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_file_path}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª
        try:
            result = await api.send_file(
                chat_id=chat_id,
                file_path=test_file_path,
                text="üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏"
            )
            
            if result:
                await api.edit(message, "‚úÖ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
            else:
                await api.edit(message, "‚ùå –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –Ω–µ —É–¥–∞–ª—Å—è")
        except Exception as send_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {send_error}")
            await api.edit(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {str(send_error)}")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        if test_file_path.exists():
            test_file_path.unlink()
            print(f"üßπ –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_file_path}")
            
    except Exception as e:
        await api.edit(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ test_upload_command: {e}")
        import traceback
        print(f"üîç DEBUG: Traceback: {traceback.format_exc()}")

async def register(api):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –º–æ–¥—É–ª—è."""
    api.register_command("testupload", test_upload_command)
    api.register_command("testfile", test_upload_command)
